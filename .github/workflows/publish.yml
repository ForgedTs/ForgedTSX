name: Publish Extension

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      releaseType:
        description: "Release type (major, minor, patch)"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint and TypeCheck
        run: |
          npm run check-types
          npm run lint

      - name: Build extension
        run: npm run compile

      - name: Run tests
        run: npm test

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: extension-package
          path: dist/
          retention-days: 1

  publish:
    needs: build
    if: success() && (github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: extension-package
          path: dist/

      - name: Auto bump version
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          npm version ${{ github.event.inputs.releaseType || 'patch' }} -m "Bump version to %s [skip ci]"
          VERSION=$(node -p "require('./package.json').version")
          git tag -a v$VERSION -m "Release v$VERSION"
          git push --follow-tags

      - name: Get version from package.json
        id: get-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Install vsce
        run: npm install -g @vscode/vsce

      - name: Package Extension
        run: npm run create-package

      - name: Publish to VS Code Marketplace
        run: vsce publish
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ steps.get-version.outputs.version }}
          tag_name: v${{ steps.get-version.outputs.version }}
          draft: false
          prerelease: false
          files: |
            *.vsix
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
